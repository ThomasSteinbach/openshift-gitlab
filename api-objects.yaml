apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: docker-dind
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: library/docker:stable-dind
      from:
        kind: DockerImage
        name: library/docker:stable-dind
      importPolicy: {}
      name: stable-dind
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: gitlab/gitlab-ce:11.1.4-ce.0
      importPolicy: {}
      name: production
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-redis
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: redis:3.2.3-alpine
      importPolicy: {}
      name: 3.2.3
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: gitlab-runner
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: thomass/gitlab-runner:latest
      importPolicy: {}
      name: production
      referencePolicy:
        type: Source
- apiVersion: v1
  data:
    GITLAB_OMNIBUS_CONFIG: 'hostname=''gitlab.xarif.de'';

      external_url "https://#{hostname}/" unless hostname.to_s == '''';

      nginx[''listen_https''] = false;

      nginx[''listen_port''] = 80;

      registry_external_url ''https://gitlab-registry.xarif.de'';

      registry_nginx[''listen_port''] = 8443;

      registry_nginx[''listen_https''] = false;

      registry_nginx[''proxy_set_headers''] = { "Host" => "$http_host", "X-Real-IP"
      => "$remote_addr", "X-Forwarded-For" => "$proxy_add_x_forwarded_for", "X-Forwarded-Proto"
      => "https", "X-Forwarded-Ssl" => "on"};

      root_pass=ENV[''GITLAB_ROOT_PASSWORD''];

      gitlab_rails[''initial_root_password'']=root_pass unless root_pass.to_s == '''';

      postgresql[''enable'']=false;

      gitlab_rails[''db_host''] = ''gitlab-ce-postgresql'';

      gitlab_rails[''db_password'']=ENV[''POSTGRESQL_PASSWORD''];

      gitlab_rails[''db_username'']=''userJMY'';

      gitlab_rails[''db_database'']=''gitlabhq_production'';

      redis[''enable''] = false;

      gitlab_rails[''redis_host'']=''gitlab-ce-redis'';

      unicorn[''worker_processes''] = 2;

      manage_accounts[''enable''] = true;

      manage_storage_directories[''manage_etc''] = false;

      prometheus_monitoring[''enable''] = false;'
  kind: ConfigMap
  metadata:
    annotations: {}
    creationTimestamp: null
    name: gitlab-ce
- apiVersion: v1
  data:
    CI_SERVER_URL: https://gitlab.xarif.de/
    DOCKER_HOST: tcp://docker-dind.OC_PROJECT_NAME.svc:2375/
    DOCKER_IMAGE: alpine:latest
    DOCKER_PRIVILEGED: 'true'
    DOCKER_VOLUMES: /var/run/docker.sock:/var/run/docker.sock;/sys/fs/cgroup:/sys/fs/cgroup:ro
    REGISTER_LOCKED: 'false'
    REGISTER_NON_INTERACTIVE: 'true'
    RUNNER_EXECUTOR: docker
    RUNNER_NAME: default-docker-runner
  kind: ConfigMap
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: gitlab-runner
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: etc-gitlab
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    volumeName: gitlab-etc-gitlab
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: gitlab-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    volumeName: gitlab-gitlab-data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: redis-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    volumeName: gitlab-redis-data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: var-lib-pgsql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: gitlab-var-lib-pgsql-data
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: builder
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: default
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: deployer
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: privilegeduser
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: docker-dind
  spec:
    replicas: 1
    selector:
      app: gitlab-runner
      deploymentconfig: docker-dind
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: gitlab-runner
          deploymentconfig: docker-dind
      spec:
        containers:
        - image: library/docker@sha256:7c62e5842c563c1a9739146474df2e11d40b10d36365c96fe6be89527b3f1c5c
          imagePullPolicy: IfNotPresent
          name: docker-dind
          ports:
          - containerPort: 2375
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: privilegeduser
        serviceAccountName: privilegeduser
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - docker-dind
        from:
          kind: ImageStreamTag
          name: docker-dind:stable-dind
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gitlab-ce
          deploymentconfig: gitlab-ce
      spec:
        containers:
        - env:
          - name: GITLAB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: GITLAB_ROOT_PASSWORD
                name: gitlab-secrets
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_PASSWORD
                name: gitlab-secrets
          envFrom:
          - configMapRef:
              name: gitlab-ce
          image: gitlab/gitlab-ce@sha256:03bad28bc2d041d0a0fcb0ad9fb1a6466a9519cd981b1694cb954057b56fa7c0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /help
              port: 80
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          name: gitlab-ce
          ports:
          - containerPort: 22
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /help
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/gitlab
            name: etc-gitlab
          - mountPath: /var/opt/gitlab
            name: gitlab-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: etc-gitlab
          persistentVolumeClaim:
            claimName: etc-gitlab
        - name: gitlab-data
          persistentVolumeClaim:
            claimName: gitlab-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - gitlab-ce
        from:
          kind: ImageStreamTag
          name: gitlab-ce:production
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-postgresql
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce-postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        post:
          execNewPod:
            command:
            - /usr/bin/scl
            - enable
            - rh-postgresql94
            - export PGPASSWORD; psql -h 'gitlab-ce-postgresql' -U postgres -d gitlabhq_production
              -c 'CREATE EXTENSION IF NOT EXISTS pg_trgm;'
            containerName: gitlab-ce-postgresql
            env:
            - name: HOME
              value: /var/lib/pgsql
            - name: PGDATA
              value: /var/lib/pgsql/data/userdata
            - name: CONTAINER_SCRIPTS_PATH
              value: /usr/share/container-scripts/postgresql
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRESQL_ADMIN_PASSWORD
                  name: gitlab-secrets
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gitlab-ce
          deploymentconfig: gitlab-ce-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userJMY
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_PASSWORD
                name: gitlab-secrets
          - name: POSTGRESQL_DATABASE
            value: gitlabhq_production
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_ADMIN_PASSWORD
                name: gitlab-secrets
          image: docker.io/centos/postgresql-94-centos7@sha256:cd3490b48b1345fd6d32916af277ef963a345dfc400dc37ea38edf30502af406
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: gitlab-ce-postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: '1'
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 300Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: var-lib-pgsql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: var-lib-pgsql-data
          persistentVolumeClaim:
            claimName: var-lib-pgsql-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - gitlab-ce-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.4
          namespace: openshift
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-redis
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce-redis
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gitlab-ce
          deploymentconfig: gitlab-ce-redis
      spec:
        containers:
        - args:
          - exec redis-server
          command:
          - /bin/sh
          - -ec
          image: redis@sha256:49e794b32c129d1ab1ee9f99c0e602f57ea1329aebe641843e0743c8ee336a7e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - redis-cli -h $(hostname) ping
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: gitlab-ce-redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - redis-cli -h $(hostname) ping
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: '1'
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 300Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - gitlab-ce-redis
        from:
          kind: ImageStreamTag
          name: gitlab-ce-redis:3.2.3
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: gitlab-runner
  spec:
    replicas: 1
    selector:
      app: gitlab-runner
      deploymentconfig: gitlab-runner
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: gitlab-runner
          deploymentconfig: gitlab-runner
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: gitlab-runner
          - secretRef:
              name: gitlab-runner-secrets
          image: thomass/gitlab-runner@sha256:4cb27de95ef7b05e93f40fa1be784d78a6e76bef10ee4735b937f282e40e26b2
          imagePullPolicy: IfNotPresent
          name: gitlab-runner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-socket
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: privilegeduser
        serviceAccountName: privilegeduser
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker-socket
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - gitlab-runner
        from:
          kind: ImageStreamTag
          name: gitlab-runner:production
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: gitlab-runner
    name: docker-dind
  spec:
    ports:
    - name: 2375-tcp
      port: 2375
      protocol: TCP
      targetPort: 2375
    selector:
      deploymentconfig: docker-dind
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce
  spec:
    ports:
    - name: 80-http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: 8443-http
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-postgresql
  spec:
    ports:
    - name: 5432-postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce-postgresql
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-redis
  spec:
    ports:
    - name: 6379-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce-redis
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-ce
    name: gitlab-ce-ssh
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: 22-ssh
      port: 22
      protocol: TCP
      targetPort: 22
    selector:
      app: gitlab-ce
      deploymentconfig: gitlab-ce
    sessionAffinity: None
    type: NodePort
- apiVersion: v1
  kind: Route
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-ce
      createdBy: gitlab-ce-template
    name: gitlab-ce-registry
  spec:
    host: OC_PROJECT_NAME-registry.xarif.de
    port:
      targetPort: 8443-http
    tls:
      termination: edge
    to:
      kind: Service
      name: gitlab-ce
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: gitlab-ce
    name: gitlab-xarif
  spec:
    host: OC_PROJECT_NAME.xarif.de
    port:
      targetPort: 80-http
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: gitlab-ce
      weight: 100
    wildcardPolicy: None
kind: List
metadata: {}
